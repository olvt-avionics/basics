{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 For this assignment, I tested my inOut.c program, which is the same concept but different from the IO.cpp program I tested in ex2. Also, I wrote this program in Xcode on the Mac rather than in Visual Studios Code on Windows. To test this program, I set a break point at the last return statement and examined the memory usage of the program. I then cross-examined the data with data from the hello-world program as this would tell me how my program compares to the simplest of C programs. Overall, Xcode states that the memory usage of both programs is 6.2 MB, meaning that inOut.c uses an insignificant amount of memory. To further define memory usage, I looked at heap memory and found that the allocation of inOut.c was 57.83 KiB and that of hello-world.c was 53.55 KiB, so inOut uses 4.28 KiB more than hello-world. This difference is very small and would have little impact on any embedded devices. Overall, in terms of memory usage, inOut.c is relatively efficient.}